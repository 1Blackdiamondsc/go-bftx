matrix:
  include:
    language: bash
    go:
    - 1.9.x
    install:
    - go get github.com/Masterminds/glide
    sudo: required
    services:
    - docker
    after_success:
      # login to docker
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      # create variable of the docker repository
    - export REPO=blockfreight/go-bftx
      # create variable of the docker tag to be used when building the new image. git log -1 --pretty=format:%h with give a truncated version of the git commit sha
    - export TAG=ci-cd-`git log -1 --pretty=format:%h`
      # build a new docker image
    - docker build -f Dockerfile -t $REPO .
      # tag the newly built docker image with the git commit sha tag
    - docker tag $REPO $REPO:$TAG
      # also tag it with the ci-cd branch
    - docker tag $REPO $REPO:ci-cd
      # push the image under both tags
    - docker push $REPO:$TAG
    - docker push $REPO:ci-cd
    addons:
      # tell travis that the 4 k8s masster VM IP addresses are safe
      ssh_known_hosts:
      - "$BLOCKFREIGHT_SSH_USER@BFTX0_MASTER_IP"
      - "$BLOCKFREIGHT_SSH_USER@BFTX1_MASTER_IP"
      - "$BLOCKFREIGHT_SSH_USER@BFTX2_MASTER_IP"
      - "$BLOCKFREIGHT_SSH_USER@BFTX3_MASTER_IP"
      # allow travis to ssh into the nodes (this was from a tutorial)
    before_deploy:
    - openssl aes-256-cbc -K $encrypted_c9b8e5769633_key -iv $encrypted_c9b8e5769633_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
    - eval "$(ssh-agent -s)"
    - chmod 600 /tmp/deploy_rsa
    - ssh-add /tmp/deploy_rsa
    deploy:
      provider: script
      skip_cleanup: true
      # run the update-node.sh script, and pass in the new tag (with the git commit sha) as a variable
      script: bash scripts/update-node.sh $TAG
      on:
        branch: ci-cd